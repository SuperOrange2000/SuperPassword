<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:custom="clr-namespace:SuperPassword.Common.CustomControl">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="BaseStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="WritableBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                        <Decorator x:Name="PART_ContentHost" Focusable="false" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                    <Condition Property="IsSelectionActive" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EditableBox" TargetType="{x:Type custom:EditableBox}">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="BorderBrush" Value="{StaticResource Default.Black}"/>
        <Setter Property="Foreground" Value="{StaticResource Default.Black}" />
        <Setter Property="HoverBackground" Value="{StaticResource Default.White}" />
        <Setter Property="HoverBorderBrush" Value="{Binding Path=BorderBrush, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
        <Setter Property="HoverForeground" Value="{Binding Path=Foreground, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type custom:EditableBox}">
                    <Grid Margin="5,5">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="{Binding Path=CornerRadius, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <TextBox
                            x:Name="PART_WritableBox"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            Style="{StaticResource WritableBoxStyle}"
                            Text="{TemplateBinding Text}"
                            TextAlignment="Center"
                            Visibility="Hidden" />
                        <TextBlock
                            x:Name="PART_UnwritableBox"
                            Padding="2,0"
                            VerticalAlignment="Center"
                            Text="{TemplateBinding Text}"
                            TextAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <DataTrigger Binding="{Binding ElementName=ReadableToggle, Path=IsChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="False" />
                            <Setter TargetName="PART_WritableBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_UnwritableBox" Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=ReadableToggle, Path=IsChecked}" Value="False">
                            <Setter Property="IsReadOnly" Value="True" />
                            <Setter TargetName="PART_WritableBox" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_UnwritableBox" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsReadOnly" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{Binding Path=HoverBackground, RelativeSource={RelativeSource Self}}" />
                                <Setter Property="Foreground" Value="{Binding Path=HoverForeground, RelativeSource={RelativeSource Self}}" />
                                <Setter Property="BorderBrush" Value="{Binding Path=HoverBorderBrush, RelativeSource={RelativeSource Self}}" />
                                <Setter Property="Cursor" Value="Hand" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>